name: Build and Release (Windows EXE)

permissions:
  contents: write

# Trigger this workflow when a tag matching v*.*.* is pushed.
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Check out the repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK 16 (or later) which includes jpackage.
      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '16'

      # 3. Compile the Java source code using cmd.
      - name: Compile Java Source
        shell: cmd
        run: |
          REM Create the output directory.
          mkdir out
          REM Generate a list of all .java files in the src folder.
          dir /b /s src\*.java > sources.txt
          REM Compile the sources into the out directory.
          javac -d out @sources.txt
          echo Compiled classes:
          dir /s out

      # 4. Package the compiled classes into a runnable JAR.
      - name: Package into JAR
        shell: cmd
        run: |
          REM Replace 'PositionSizeCalculator' with the fully qualified main class name if needed.
          jar cfe PositionSizeCalculator.jar PositionSizeCalculator -C out .
          echo JAR contents:
          jar tf PositionSizeCalculator.jar

      # 5. Use jpackage to create a native Windows executable with a custom icon.
      - name: Package native executable with jpackage
        shell: cmd
        run: |
          REM The --installer-name option forces the output installer to be named PositionSizeCalculator.exe.
          jpackage --input out --dest . --name PositionSizeCalculator --installer-name PositionSizeCalculator.exe --main-jar PositionSizeCalculator.jar --main-class PositionSizeCalculator --icon calculator.ico --win-shortcut --win-menu --type exe
          echo Packaged files:
          dir

      # 6. Create a GitHub Release using the pushed tag.
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 7. Upload the native executable as a release asset.
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./PositionSizeCalculator.exe
          asset_name: PositionSizeCalculator.exe
          asset_content_type: application/octet-stream
